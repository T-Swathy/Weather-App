{"version":3,"sources":["Components/DeviceName.js","Components/SearchCity.js","Components/SmallFont.js","Components/Text.js","Components/Forecast.js","Components/ResultsFadeIn.js","Components/BigFont.js","Components/MediumFont.js","Components/Result.js","Components/SideBar.js","Components/App.js","serviceWorker.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SearchBar","styled","form","showResult","SearchInput","input","SearchIcon","span","SearchCity","submit","value","change","func","onSubmit","icon","faSearch","type","placeholder","onChange","SmallLabel","h4","color","weight","fontSize","align","firstToUpperCase","Text","ForecastWrapper","div","WeatherIcon","img","Forecasttime","props","temp","month","day","hour","iconUrl","src","ResultFadeIn","keyframes","BigLabel","h2","MediumFont","h3","Results","Forecast","Result","weather","forecasts","city","country","date","description","main","forecast","map","item","key","dt","Math","floor","dt_txt","slice","Temperature","useStyles","makeStyles","theme","root","display","drawer","width","flexShrink","drawerPaper","backgroundColor","toolbar","mixins","content","flexGrow","padding","spacing","Sidebar","result","weatherIcon","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","classes","Drawer","className","variant","paper","anchor","List","text","index","ListItem","button","ListItemIcon","style","ListItemText","primary","Divider","Card","margin","Body","textAlign","WeatherWrapper","App","state","weatherInfo","clouds","error","handleInputChange","e","setState","target","handleSearchCity","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","currentDate","Date","getDay","getDate","getMonth","sys","toLocaleTimeString","name","temp_max","temp_min","speed","list","catch","console","log","handleImage","str","this","marginLeft","marginBottom","height","defaultValue","preventDefault","Button","onClick","border","Img","Title","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c111d393.chunk.js","sourcesContent":["const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '525px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px',\r\n};\r\n\r\nconst device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n\r\nexport default device;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport device from './DeviceName.js';\r\n\r\nconst SearchBar = styled.form`\r\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\r\n  position: relative;\r\n  margin-left: 23vw;\r\n  max-width: 500px;\r\n  transition: 0.8s 0.5s;\r\n \r\n\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n \r\n  font-size: 16px;\r\n \r\n  color:'black';\r\n  transition: 0.2s;\r\n  border-radius: 20px;\r\n  background-color: \t#F5F5F5;\r\n \r\n  @media ${device.laptop} {\r\n    padding: 10px 20px 15px 45px;\r\n    border-radius: 30px;\r\n  }\r\n`;\r\n\r\nconst SearchIcon = styled.span`\r\n  display: block;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 22px;\r\n  transform: translate(-50%, -50%);\r\n  height: 16px;\r\n  width: 16px;\r\n  font-size: 14px;\r\n  color: #c5c5c5;\r\n  @media ${device.laptop} {\r\n    height: 18px;\r\n    width: 18px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst SearchCity = ({ submit, value, change, showResult, func }) => {\r\n  return (\r\n    <>\r\n      <SearchBar showResult={showResult} onSubmit={submit}>\r\n      <SearchIcon>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n          \r\n        </SearchIcon>\r\n        <SearchInput type=\"text\" value={value} placeholder=\"Enter city\" onChange={change} />\r\n        \r\n        <SearchIcon>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n          \r\n        </SearchIcon>\r\n        \r\n      </SearchBar>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default SearchCity;\r\n","import styled from 'styled-components';\r\nimport device from './DeviceName.js';\r\n\r\nconst SmallLabel = styled.h4`\r\n  color: ${({ color }) => color || 'black'};\r\n  display: block;\r\n  font-weight: ${({ weight }) => weight || '600'};\r\n  font-size: ${({ fontSize }) => fontSize || '10px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  padding: 5px 0;\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '20px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '10px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '26px'};\r\n  }\r\n`;\r\n\r\nexport default SmallLabel;\r\n","import styled from 'styled-components';\r\nimport device from './DeviceName.js';\r\n\r\nconst Text = styled.span`\r\n  color: ${({ color }) => color || 'black'};\r\n  display: block;\r\n  font-size: ${({ fontSize }) => fontSize || '12px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '15px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '17px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '19px'};\r\n  }\r\n`;\r\n\r\nexport default Text;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport SmallLabel from './SmallFont';\r\nimport Text from './Text';\r\nimport device from './DeviceName.js';\r\n\r\nconst ForecastWrapper = styled.div`\r\n  flex-shrink: 0;\r\n  flex-basis: 90px;\r\n  padding: 10px;\r\n  margin: 0 5px;\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  &:first-child {\r\n    margin-left: 0;\r\n  }\r\n  &:last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    flex-basis: 125px;\r\n  }\r\n \r\n`;\r\n\r\nconst WeatherIcon = styled.img`\r\n  display: block;\r\n  height: 50px;\r\n  width: 50px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Forecasttime = props => {\r\n  const { temp, month, day, hour, icon } = props;\r\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\r\n\r\n  return (\r\n    <ForecastWrapper>\r\n      <Text align=\"center\">\r\n        {month}.{day}\r\n      </Text>\r\n      <Text align=\"center\">{hour}:00</Text>\r\n      <WeatherIcon src={iconUrl} />\r\n      <SmallLabel align=\"center\" weight=\"400\">\r\n        {temp}&#176;\r\n      </SmallLabel>\r\n    </ForecastWrapper>\r\n  );\r\n};\r\nexport default Forecasttime;\r\n","import { keyframes } from 'styled-components';\r\n\r\nconst ResultFadeIn = keyframes`\r\n  to {\r\n    opacity: 1;\r\n        visibility: visible;\r\n        top: 0;\r\n  }\r\n`;\r\n\r\nexport default ResultFadeIn;\r\n","import styled from 'styled-components';\r\nimport device from './DeviceName.js';\r\n\r\nconst BigLabel = styled.h2`\r\n  color: ${({ color }) => color || 'black'};\r\n  display: block;\r\n  font-weight: ${({ weight }) => weight || '600'};\r\n  font-size: ${({ fontSize }) => fontSize || '30px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  padding: 5px 0;\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n \r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '43px'};\r\n  } \r\n \r\n`;\r\n\r\nexport default BigLabel;\r\n","import styled from 'styled-components';\r\nimport device from './DeviceName.js';\r\n\r\nconst MediumFont = styled.h3`\r\n  color: ${({ color }) => color || 'black'};\r\n  display: block;\r\n  font-weight: ${({ weight }) => weight || '600'};\r\n  font-size: ${({ fontSize }) => fontSize || '10px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  padding: 5px 0;\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '23px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '10px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '29px'};\r\n  }\r\n`;\r\n\r\nexport default MediumFont;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport device from './DeviceName.js';\r\nimport Forecasttime from './Forecast';\r\nimport ResultFadeIn from './ResultsFadeIn';\r\nimport BigLabel from './BigFont';\r\nimport MediumFont from './MediumFont';\r\nimport SmallLabel from './SmallFont';\r\n\r\n\r\nconst Results = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  padding: 40px 0;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  position: relative;\r\n  top: 20px;\r\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\r\n`;\r\n\r\nconst ForecastWrapper = styled.div`\r\n  flex-basis: 100%;\r\n  margin: 20px 0;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Forecast = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  scrollbar-color: lightgray black;\r\n  scrollbar-width: thin;\r\n  margin-top: 20px;\r\n  padding-bottom: 20px;\r\n  @media ${device.laptop} {\r\n    order: 4;\r\n  }\r\n`;\r\n\r\nconst Result = ({ weather }) => {\r\n  const {\r\n    city,\r\n    country,\r\n    date,\r\n    description,\r\n    main,\r\n    temp,\r\n    forecast,\r\n  } = weather;\r\n\r\n  const forecasts = forecast.map(item => (\r\n    <Forecasttime\r\n      key={item.dt}\r\n      temp={Math.floor(item.main.temp * 1) / 1}\r\n      icon={item.weather[0].icon}\r\n      month={item.dt_txt.slice(5, 7)}\r\n      day={item.dt_txt.slice(8, 10)}\r\n      hour={item.dt_txt.slice(11, 13) * 1}\r\n    />\r\n  ) \r\n  );\r\n\r\n return (\r\n    <Results>\r\n    \r\n      <ForecastWrapper>\r\n        <BigLabel weight=\"400\">Forecast</BigLabel>\r\n        <Forecast>{forecasts}</Forecast>\r\n      </ForecastWrapper>\r\n     \r\n    </Results>\r\n  );\r\n};\r\nexport default Result;\r\n","import React from 'react';\r\nimport EditLocationRoundedIcon from '@material-ui/icons/EditLocationRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardRoundedIcon from '@material-ui/icons/DashboardRounded';\r\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded';\r\nimport BarChartRoundedIcon from '@material-ui/icons/BarChartRounded';\r\nimport CalendarTodayRoundedIcon from '@material-ui/icons/CalendarTodayRounded';\r\nimport { Card } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCloud,\r\n  faBolt,\r\n  faCloudRain,\r\n  faCloudShowersHeavy,\r\n  faSnowflake,\r\n  faSun,\r\n  faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport device from './DeviceName.js';\r\nimport styled from 'styled-components';\r\nimport MediumFont from './MediumFont';\r\nimport SmallLabel from './SmallFont';\r\nconst drawerWidth = 240;\r\n\r\n\r\nconst WeatherIcon = styled.div`\r\n  display: flex;\r\n  justify-content:left;\r\n  align-items: center;\r\n  font-size: 70px;\r\n  color: black;\r\n  @media ${device.tablet} {\r\n    font-size: 100px;\r\n    justify-content: flex-end;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 20px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 140px;\r\n  }\r\n`;\r\nconst Temperature = styled.h3`\r\n  display: block;\r\n  font-size: 50px;\r\n  font-weight: 400;\r\n  color: black;\r\n  @media ${device.tablet} {\r\n    font-size: 70px;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 80px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 110px;\r\n  }`\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n \r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    color:'white',\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#7B68EE'  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor:'blue',\r\n    padding: theme.spacing(3),\r\n  \r\n  },\r\n}));\r\n\r\n\r\n const Sidebar=({result}) =>{\r\n  const {\r\n    city,\r\n    country,\r\n    date,\r\n    description,\r\n    main,\r\n    temp,\r\n    sunset,\r\n    sunrise,\r\n    humidity,\r\n    wind,\r\n    highestTemp,\r\n    lowestTemp,\r\n    forecast,\r\n  } = result;\r\n  let weatherIcon = null;\r\n\r\n  if (main === 'Thunderstorm') {\r\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n  } else if (main === 'Drizzle') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n  } else if (main === 'Rain') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\r\n  } else if (main === 'Snow') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\r\n  } else if (main === 'Clear') {\r\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\r\n  } else if (main === 'Clouds') {\r\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\r\n  } else {\r\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n  }\r\n  const classes = useStyles();\r\n  \r\n \r\n  return (\r\n\r\n   \r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      anchor=\"left\"\r\n\r\n    >\r\n         <List >\r\n        {['METEOROLOG'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><WbSunnyRoundedIcon style={{ color:'white' }}/></ListItemIcon>\r\n            <ListItemText primary={text} style={{color: 'white' }}></ListItemText>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider/>\r\n     \r\n      <List>\r\n        {['Dashboard'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><DashboardRoundedIcon style={{ color:'white' }}/></ListItemIcon>\r\n            <ListItemText primary={text}  style={{color: 'white' }}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <List>\r\n        {['Statistics'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><BarChartRoundedIcon style={{ color:'white' }} /></ListItemIcon>\r\n            <ListItemText primary={text}  style={{color: 'white' }}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <List>\r\n        {['Map'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><EditLocationRoundedIcon style={{ color:'white' }}/></ListItemIcon>\r\n            <ListItemText primary={text}  style={{color: 'white' }}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <List>\r\n        {['Calendar'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon><CalendarTodayRoundedIcon style={{ color:'white' }}/></ListItemIcon>\r\n            <ListItemText primary={text}  style={{color: 'white' }}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    \r\n      <Card style={{ backgroundColor:'white', color: 'black', margin: '15px' }}>\r\n\r\n                      <Card.Body style={{ textAlign: 'center' }}>\r\n                      <MediumFont>\r\n          {city}, {country}\r\n        </MediumFont>\r\n        <SmallLabel weight=\"400\">{date}</SmallLabel>\r\n        <WeatherIcon>{weatherIcon}</WeatherIcon>\r\n        <Temperature>{Math.floor(temp)}&#176;</Temperature>\r\n          <SmallLabel weight=\"400\" firstToUpperCase>\r\n            {description}\r\n          </SmallLabel>\r\n                      </Card.Body>\r\n                    </Card>\r\n      \r\n      \r\n    \r\n    </Drawer>\r\n   \r\n  \r\n  );\r\n}\r\nexport default Sidebar;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchCity from './SearchCity';\r\nimport device from './DeviceName.js';\r\nimport Result from './Result';\r\nimport Sidebar from './SideBar';\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\n\r\n\r\n\r\nconst WeatherWrapper = styled.div`\r\n  max-width: 1500px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    value: 'chennai',\r\n    weatherInfo:{ city:\" \",\r\n      country:\" \",\r\n      date:\" \",\r\n      description:\" \",\r\n      main: \" \",\r\n      temp:\" \",\r\n      highestTemp:\" \",\r\n      lowestTemp:\" \",\r\n      sunrise:\" \",\r\n      sunset:\" \",\r\n      clouds:\" \",\r\n      humidity:\" \",\r\n      wind: \" \",\r\n      forecast:[],},\r\n    error: false,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleSearchCity();\r\n  }\r\n\r\n  handleSearchCity = () => {\r\n    const value = this.state.value;\r\n    const APIkey = '12345678';//Enter your API key\r\n\r\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\r\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\r\n\r\n    Promise.all([fetch(weather), fetch(forecast)])\r\n      .then(([res1, res2]) => {\r\n        if (res1.ok && res2.ok) {\r\n          return Promise.all([res1.json(), res2.json()]);\r\n        }\r\n        throw Error(res1.statusText, res2.statusText);\r\n      })\r\n      .then(([data1, data2]) => {\r\n        const months = [\r\n          'January',\r\n          'February',\r\n          'March',\r\n          'April',\r\n          'May',\r\n          'June',\r\n          'July',\r\n          'August',\r\n          'September',\r\n          'October',\r\n          'Nocvember',\r\n          'December',\r\n        ];\r\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday',, 'Friday', 'Saturday'];\r\n        const currentDate = new Date();\r\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\r\n          months[currentDate.getMonth()]\r\n        }`;\r\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\r\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\r\n\r\n        const weatherInfo = {\r\n          city: data1.name,\r\n          country: data1.sys.country,\r\n          date,\r\n          description: data1.weather[0].description,\r\n          main: data1.weather[0].main,\r\n          temp: data1.main.temp,\r\n          highestTemp: data1.main.temp_max,\r\n          lowestTemp: data1.main.temp_min,\r\n          sunrise,\r\n          sunset,\r\n          clouds: data1.clouds.all,\r\n          humidity: data1.main.humidity,\r\n          wind: data1.wind.speed,\r\n          forecast: data2.list,\r\n        };\r\n        this.setState({\r\n          weatherInfo,\r\n          error: false,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n\r\n        this.setState({\r\n          error: true,\r\n          weatherInfo: null,\r\n        });\r\n      });\r\n  };\r\n\r\n  handleImage = str => {\r\n    this.setState({ value: str }, () => {\r\n      this.handleSearchCity();\r\n    });\r\n  };\r\n  render() {\r\n    const { value, weatherInfo, error } = this.state;\r\n    return (\r\n      <>\r\n       <Sidebar result={weatherInfo}/> \r\n\r\n        <div style={{ marginLeft: '17vw', padding: '30px' }}>\r\n          <WeatherWrapper>\r\n            <div className=\"container\" style={{ marginBottom: '30px' }}>\r\n          <div className=\"row\">\r\n            <SearchCity\r\n              style={{ height: '100vh' }}\r\n              defaultValue={value}\r\n              showResult={(weatherInfo || error) && true}\r\n              change={this.handleInputChange}\r\n              submit={e => {\r\n                e.preventDefault();\r\n              }}\r\n            />\r\n            <div style={{ textAlign: 'center', padding: '10px' }} >\r\n              <Button onClick={this.handleSearchCity} style={{ backgroundColor: '#7B68EE' }}>\r\n                Search\r\n              </Button>\r\n         \r\n            </div></div>\r\n    \r\n              <div className=\"row\">\r\n\r\n                <div className=\"col-md-3\">\r\n                  <button onClick={() => this.handleImage('chennai')} style={{ border: '0px' }}>\r\n                    <Card style={{ backgroundColor:'white', color: 'black', margin: '20px' }}>\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        height=\"150px\"\r\n                        src=\"https://static.toiimg.com/thumb/msid-78398342,width-1200,height-900,resizemode-4/.jpg\"\r\n                      />\r\n\r\n                      <Card.Body style={{ textAlign: 'center' }}>\r\n                        <Card.Title>CHENNAI</Card.Title>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <button onClick={() => this.handleImage('paris')} style={{ border: '0px' }}>\r\n                    <Card style={{ backgroundColor: 'white', color: 'black', margin: '15px' }}>\r\n                      <Card.Img\r\n                        variant=\"top\"\r\n                        height=\"150px\"\r\n                        src=\"https://cdn.lifestyleasia.com/wp-content/uploads/sites/3/2020/11/16190957/photo-1543349689-9a4d426bee8e-1243x900.jpeg\"\r\n                      />\r\n                      <Card.Body style={{ textAlign: 'center' }}>\r\n                        <Card.Title>PARIS</Card.Title>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <button onClick={() => this.handleImage('london')} style={{ border: '0px' }}>\r\n                    <Card style={{ backgroundColor: 'white', color: 'black', margin: '15px' }}>\r\n                      <Card.Img\r\n                        height=\"150px\"\r\n                        variant=\"top\"\r\n                        src=\"https://img.theweek.in/content/dam/week/news/world/images/2020/8/24/london-bridge.jpg\"\r\n                      />\r\n                      <Card.Body style={{ textAlign: 'center' }}>\r\n                        <Card.Title>London</Card.Title>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <button onClick={() => this.handleImage('singapore')} style={{ border: '0px'}}>\r\n                    <Card style={{ backgroundColor: 'white', color: 'black', margin: '15px' }}>\r\n                      <Card.Img\r\n                        height=\"150px\"\r\n                        variant=\"top\"\r\n                        src=\"https://www.nationsonline.org/gallery/Singapore/Merlion-at-the-Singapore-River.jpg\"\r\n                      />\r\n                      <Card.Body>\r\n                        <Card.Title>Singapore</Card.Title>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n            {weatherInfo && <Result weather={weatherInfo} />}\r\n           \r\n          </WeatherWrapper>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('weather-app'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}